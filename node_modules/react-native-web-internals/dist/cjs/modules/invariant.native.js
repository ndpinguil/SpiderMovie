"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var invariant_exports = {};
__export(invariant_exports, {
  invariant: () => invariant,
  warning: () => warning
});
module.exports = __toCommonJS(invariant_exports);
function invariant(condition, log, ...logVars) {
  if (!condition)
    throw new Error(
      process.env.NODE_ENV === "development" ? log.split("%s").flatMap((chunk, i) => [chunk, logVars[i]]).join("") : log
    );
}
function warning(condition, log, ...logVars) {
  if (process.env.NODE_ENV === "development")
    try {
      invariant(condition, log, ...logVars);
    } catch (err) {
      console.warn(err);
    }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  invariant,
  warning
});
//# sourceMappingURL=invariant.js.map
