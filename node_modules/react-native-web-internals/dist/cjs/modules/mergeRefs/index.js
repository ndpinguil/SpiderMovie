var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var mergeRefs_exports = {};
__export(mergeRefs_exports, {
  mergeRefs: () => mergeRefs
});
module.exports = __toCommonJS(mergeRefs_exports);
function mergeRefs(...args) {
  return function(node) {
    args.forEach((ref) => {
      if (ref != null) {
        if (typeof ref == "function") {
          ref(node);
          return;
        }
        if (typeof ref == "object") {
          ref.current = node;
          return;
        }
        console.error(
          `mergeRefs cannot handle Refs of type boolean, number or string, received ref ${String(
            ref
          )}`
        );
      }
    });
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  mergeRefs
});
//# sourceMappingURL=index.js.map
