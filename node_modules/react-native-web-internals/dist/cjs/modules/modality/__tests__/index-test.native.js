"use strict";
var import_dom_event_testing_library = require("dom-event-testing-library"), import__ = require("..");
(0, import_dom_event_testing_library.describeWithPointerEvent)("modules/modality", (hasPointerEvent) => {
  let rootNode;
  beforeEach(() => {
    (0, import_dom_event_testing_library.setPointerEvent)(hasPointerEvent), rootNode = document.createElement("div"), document.body.appendChild(rootNode);
  }), afterEach(() => {
    document.body.removeChild(rootNode), rootNode = null, (0, import_dom_event_testing_library.clearPointers)(), (0, import__.testOnly_resetActiveModality)();
  }), describe("getModality", () => {
    (0, import_dom_event_testing_library.testWithPointerType)("reflects currently-in-use modality", (pointerType) => {
      const target = (0, import_dom_event_testing_library.createEventTarget)(rootNode);
      expect((0, import__.getModality)()).toBe("keyboard"), target.pointerdown({ pointerType }), expect((0, import__.getModality)()).toBe(pointerType), target.pointerup({ pointerType }), target.keydown(), expect((0, import__.getModality)()).toBe("keyboard"), pointerType !== "touch" && (target.pointermove({ pointerType }), expect((0, import__.getModality)()).toBe(pointerType), target.keydown(), expect((0, import__.getModality)()).toBe("keyboard"));
    });
  }), describe("getActiveModality", () => {
    (0, import_dom_event_testing_library.testWithPointerType)("reflects last actively used modality", (pointerType) => {
      const target = (0, import_dom_event_testing_library.createEventTarget)(rootNode);
      expect((0, import__.getActiveModality)()).toBe("keyboard"), target.pointerdown({ pointerType }), expect((0, import__.getActiveModality)()).toBe(pointerType), target.pointerup({ pointerType }), target.keydown(), pointerType !== "touch" && (target.pointermove({ pointerType }), expect((0, import__.getActiveModality)()).toBe("keyboard"));
    });
  });
});
//# sourceMappingURL=index-test.js.map
