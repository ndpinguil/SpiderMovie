var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var useLocale_exports = {};
__export(useLocale_exports, {
  LocaleProvider: () => LocaleProvider,
  getLocaleDirection: () => getLocaleDirection,
  useLocaleContext: () => useLocaleContext
});
module.exports = __toCommonJS(useLocale_exports);
var import_react = require("react"), import_isLocaleRTL = require("./isLocaleRTL"), import_jsx_runtime = require("react/jsx-runtime");
const defaultLocale = {
  direction: "ltr",
  locale: "en-US"
}, LocaleContext = (0, import_react.createContext)(defaultLocale);
function getLocaleDirection(locale) {
  return (0, import_isLocaleRTL.isLocaleRTL)(locale) ? "rtl" : "ltr";
}
function LocaleProvider(props) {
  const { direction, locale, children } = props;
  return direction || locale ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    LocaleContext.Provider,
    {
      value: {
        direction: locale ? getLocaleDirection(locale) : direction,
        locale
      },
      children
    }
  ) : children;
}
function useLocaleContext() {
  return (0, import_react.useContext)(LocaleContext);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  LocaleProvider,
  getLocaleDirection,
  useLocaleContext
});
//# sourceMappingURL=index.js.map
