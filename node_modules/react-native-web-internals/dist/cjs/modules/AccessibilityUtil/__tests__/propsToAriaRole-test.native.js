"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
));
var import_propsToAriaRole = __toESM(require("../propsToAriaRole"));
describe("modules/AccessibilityUtil/propsToAriaRole", () => {
  test("when missing accessibility props", () => {
    expect((0, import_propsToAriaRole.default)({})).toBeUndefined();
  }), test('when "accessibilityRole" is defined', () => {
    expect((0, import_propsToAriaRole.default)({ accessibilityRole: "banner" })).toEqual("banner");
  }), test('when "accessibilityRole" is a native-only value', () => {
    expect((0, import_propsToAriaRole.default)({ accessibilityRole: "none" })).toEqual("presentation"), expect((0, import_propsToAriaRole.default)({ accessibilityRole: "imagebutton" })).toEqual(void 0), expect((0, import_propsToAriaRole.default)({ accessibilityRole: "label" })).toEqual(void 0);
  });
});
//# sourceMappingURL=propsToAriaRole-test.js.map
