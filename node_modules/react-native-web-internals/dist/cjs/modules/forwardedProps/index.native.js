"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var forwardedProps_exports = {};
__export(forwardedProps_exports, {
  accessibilityProps: () => accessibilityProps,
  clickProps: () => clickProps,
  defaultProps: () => defaultProps,
  focusProps: () => focusProps,
  forwardPropsListText: () => forwardPropsListText,
  forwardPropsListView: () => forwardPropsListView,
  forwardedProps: () => forwardedProps,
  keyboardProps: () => keyboardProps,
  mouseProps: () => mouseProps,
  styleProps: () => styleProps,
  touchProps: () => touchProps
});
module.exports = __toCommonJS(forwardedProps_exports);
const defaultProps = {
  children: !0,
  dataSet: !0,
  nativeID: !0,
  ref: !0,
  suppressHydrationWarning: !0,
  testID: !0,
  id: !0
}, accessibilityProps = {
  accessibilityActiveDescendant: !0,
  accessibilityAtomic: !0,
  accessibilityAutoComplete: !0,
  accessibilityBusy: !0,
  accessibilityChecked: !0,
  accessibilityColumnCount: !0,
  accessibilityColumnIndex: !0,
  accessibilityColumnSpan: !0,
  accessibilityControls: !0,
  accessibilityCurrent: !0,
  accessibilityDescribedBy: !0,
  accessibilityDetails: !0,
  accessibilityDisabled: !0,
  accessibilityErrorMessage: !0,
  accessibilityExpanded: !0,
  accessibilityFlowTo: !0,
  accessibilityHasPopup: !0,
  accessibilityHidden: !0,
  accessibilityInvalid: !0,
  accessibilityKeyShortcuts: !0,
  accessibilityLabel: !0,
  accessibilityLabelledBy: !0,
  accessibilityLevel: !0,
  accessibilityLiveRegion: !0,
  accessibilityModal: !0,
  accessibilityMultiline: !0,
  accessibilityMultiSelectable: !0,
  accessibilityOrientation: !0,
  accessibilityOwns: !0,
  accessibilityPlaceholder: !0,
  accessibilityPosInSet: !0,
  accessibilityPressed: !0,
  accessibilityReadOnly: !0,
  accessibilityRequired: !0,
  accessibilityRole: !0,
  accessibilityRoleDescription: !0,
  accessibilityRowCount: !0,
  accessibilityRowIndex: !0,
  accessibilityRowSpan: !0,
  accessibilitySelected: !0,
  accessibilitySetSize: !0,
  accessibilitySort: !0,
  accessibilityValueMax: !0,
  accessibilityValueMin: !0,
  accessibilityValueNow: !0,
  accessibilityValueText: !0,
  dir: !0,
  focusable: !0
}, clickProps = {
  onClick: !0,
  onClickCapture: !0,
  onContextMenu: !0
}, focusProps = {
  onBlur: !0,
  onFocus: !0
}, keyboardProps = {
  onKeyDown: !0,
  onKeyDownCapture: !0,
  onKeyUp: !0,
  onKeyUpCapture: !0
}, mouseProps = {
  onMouseDown: !0,
  onMouseEnter: !0,
  onMouseLeave: !0,
  onMouseMove: !0,
  onMouseOver: !0,
  onMouseOut: !0,
  onMouseUp: !0
}, touchProps = {
  onTouchCancel: !0,
  onTouchCancelCapture: !0,
  onTouchEnd: !0,
  onTouchEndCapture: !0,
  onTouchMove: !0,
  onTouchMoveCapture: !0,
  onTouchStart: !0,
  onTouchStartCapture: !0
}, styleProps = {
  classList: !0,
  style: !0
}, forwardedProps = {
  defaultProps,
  accessibilityProps,
  clickProps,
  focusProps,
  keyboardProps,
  mouseProps,
  touchProps,
  styleProps
}, forwardPropsListText = {
  ...defaultProps,
  ...accessibilityProps,
  ...clickProps,
  ...focusProps,
  ...keyboardProps,
  ...mouseProps,
  ...touchProps,
  ...styleProps,
  href: !0,
  lang: !0,
  pointerEvents: !0
}, forwardPropsListView = {
  ...forwardPropsListText,
  onScroll: !0,
  onWheel: !0
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  accessibilityProps,
  clickProps,
  defaultProps,
  focusProps,
  forwardPropsListText,
  forwardPropsListView,
  forwardedProps,
  keyboardProps,
  mouseProps,
  styleProps,
  touchProps
});
//# sourceMappingURL=index.js.map
