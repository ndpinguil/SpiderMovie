var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
));
var import__ = __toESM(require(".."));
describe("modules/multiplyStyleLengthValue", () => {
  test("number", () => {
    expect((0, import__.default)(2, -1)).toEqual(-2), expect((0, import__.default)(2, 2)).toEqual(4), expect((0, import__.default)(2.5, 2)).toEqual(5);
  }), test("length", () => {
    expect((0, import__.default)("2rem", -1)).toEqual("-2rem"), expect((0, import__.default)("2px", 2)).toEqual("4px"), expect((0, import__.default)("2.5em", 2)).toEqual("5em"), expect((0, import__.default)("2e3px", 2)).toEqual("4000px");
  });
});
//# sourceMappingURL=index-test.js.map
