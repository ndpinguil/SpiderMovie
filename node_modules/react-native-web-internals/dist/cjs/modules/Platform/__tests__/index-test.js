var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
));
var import__ = __toESM(require(".."));
describe("apis/Platform", () => {
  describe("select", () => {
    test('supports "default"', () => {
      expect(import__.default.select({ default: "default" })).toEqual("default");
    }), test('chooses "web"', () => {
      expect(
        import__.default.select({
          android: "android",
          ios: "ios",
          web: "web",
          default: "default"
        })
      ).toEqual("web");
    });
  }), describe("isTesting", () => {
    const NODE_ENV_BACKUP = process.env.NODE_ENV;
    afterEach(() => {
      process.env.NODE_ENV = NODE_ENV_BACKUP;
    }), test('true when NODE_ENV is "test"', () => {
      process.env.NODE_ENV = "test", expect(import__.default.isTesting).toEqual(!0);
    }), test('false when NODE_ENV is not "test"', () => {
      process.env.NODE_ENV = "development", expect(import__.default.isTesting).toEqual(!1);
    });
  });
});
//# sourceMappingURL=index-test.js.map
