import React, { forwardRef } from "react";
import { Theme } from "../views/Theme";
import { jsx } from "react/jsx-runtime";
function themeable(component, staticConfig) {
  const withTheme = forwardRef(function(props, ref) {
    const { themeInverse, theme, componentName, themeReset, ...rest } = props, element = React.createElement(component, {
      ...rest,
      ref,
      "data-disable-theme": !0
    });
    return /* @__PURE__ */ jsx(
      Theme,
      {
        componentName: componentName || staticConfig?.componentName,
        name: theme || null,
        "disable-child-theme": !0,
        debug: props.debug,
        inverse: themeInverse,
        reset: themeReset,
        children: element
      }
    );
  });
  return withTheme.displayName = `Themed(${component?.displayName || component?.name || "Anonymous"})`, withTheme;
}
export {
  themeable
};
//# sourceMappingURL=themeable.js.map
