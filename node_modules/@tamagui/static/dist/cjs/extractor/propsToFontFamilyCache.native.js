"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var propsToFontFamilyCache_exports = {};
__export(propsToFontFamilyCache_exports, {
  getFontFamilyClassNameFromProps: () => getFontFamilyClassNameFromProps,
  getPropsToFontFamily: () => getPropsToFontFamily,
  setPropsToFontFamily: () => setPropsToFontFamily
});
module.exports = __toCommonJS(propsToFontFamilyCache_exports);
const cache = /* @__PURE__ */ new WeakMap();
function setPropsToFontFamily(props, ff) {
  cache.set(props, ff);
}
function getPropsToFontFamily(props) {
  return cache.get(props);
}
function getFontFamilyClassNameFromProps(props) {
  const ff = getPropsToFontFamily(props);
  if (ff)
    return ` font_${ff.replace("$", "")}`;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getFontFamilyClassNameFromProps,
  getPropsToFontFamily,
  setPropsToFontFamily
});
//# sourceMappingURL=propsToFontFamilyCache.js.map
