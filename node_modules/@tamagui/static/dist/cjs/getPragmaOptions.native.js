"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var getPragmaOptions_exports = {};
__export(getPragmaOptions_exports, {
  getPragmaOptions: () => getPragmaOptions
});
module.exports = __toCommonJS(getPragmaOptions_exports);
function getPragmaOptions({
  source,
  path,
  disableCommentCheck
}) {
  var _a, _b;
  if (!disableCommentCheck && !source.startsWith("//") && !source.startsWith("/*"))
    return {
      shouldPrintDebug: !1,
      shouldDisable: !1
    };
  let shouldPrintDebug = !1, shouldDisable = !1;
  const firstLine = source.slice(0, 800).split(`
`)[0];
  return firstLine.includes("tamagui-ignore") && (shouldDisable = !0), firstLine.includes("debug") && (shouldPrintDebug = !0), firstLine.includes("debug-verbose") && (shouldPrintDebug = "verbose"), process.env.TAMAGUI_DEBUG_FILE && path.includes(process.env.TAMAGUI_DEBUG_FILE) && (shouldPrintDebug = "verbose"), (_a = process.env.DEBUG) != null && _a.includes("tamagui") && (shouldPrintDebug = !0), (_b = process.env.DEBUG) != null && _b.includes("tamagui-verbose") && (shouldPrintDebug = "verbose"), {
    shouldPrintDebug,
    shouldDisable
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getPragmaOptions
});
//# sourceMappingURL=getPragmaOptions.js.map
