import * as t from "@babel/types";
function generateUid(scope, name) {
  if (typeof scope != "object")
    throw "generateUid expects a scope object as its first parameter";
  if (!(typeof name == "string" && name !== ""))
    throw "generateUid expects a valid name as its second parameter";
  name = t.toIdentifier(name).replace(/^_+/, "").replace(/[0-9]+$/g, "");
  let uid, i = 0;
  do
    i > 1 ? uid = name + i : uid = name, i++;
  while (scope.hasLabel(uid) || scope.hasBinding(uid) || scope.hasGlobal(uid) || scope.hasReference(uid));
  const program = scope.getProgramParent();
  return program.references[uid] = !0, program.uids[uid] = !0, uid;
}
export {
  generateUid
};
//# sourceMappingURL=generatedUid.js.map
