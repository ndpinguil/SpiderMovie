import { relative, sep } from "path";
const nameToPaths = {}, Module = require("module"), getNameToPaths = () => nameToPaths, proxyWorm = require("@tamagui/proxy-worm"), rnw = require("react-native-web"), core = require("@tamagui/core-node");
let isRegistered = !1, og;
function registerRequire() {
  if (isRegistered)
    return () => {
    };
  const { unregister } = require("esbuild-register/dist/node").register({
    hookIgnoreNodeModules: !1
  });
  return og = Module.prototype.require, isRegistered = !0, Module.prototype.require = tamaguiRequire, () => {
    unregister(), isRegistered = !1, Module.prototype.require = og;
  };
}
const packageJson = require("react-native-web/package.json"), IGNORES = process.env.TAMAGUI_IGNORE_BUNDLE_ERRORS, extraIgnores = IGNORES === "true" ? [] : process.env.TAMAGUI_IGNORE_BUNDLE_ERRORS?.split(","), knownIgnorableModules = {
  "expo-modules": !0,
  solito: !0,
  ...Object.fromEntries(extraIgnores?.map((k) => [k, !0]) || [])
}, hasWarnedForModules = /* @__PURE__ */ new Set();
function tamaguiRequire(path) {
  if (/\.(gif|jpe?g|png|svg|ttf|otf|woff2?|bmp|webp)$/i.test(path))
    return {};
  if (path === "@gorhom/bottom-sheet" || path.startsWith("react-native-reanimated") || path === "expo-linear-gradient" || path === "@expo/vector-icons")
    return proxyWorm;
  if (path === "react-native/package.json")
    return packageJson;
  if (path === "react-native-web-lite" || path.startsWith("react-native") && // allow our rnw.tsx imports through
  !path.startsWith("react-native-web/dist/cjs/exports".replace(/\//g, sep)))
    return rnw;
  if (path === "@tamagui/core" || path === "@tamagui/core-node" || path === "@tamagui/web")
    return core;
  if (path in knownIgnorableModules)
    return proxyWorm;
  try {
    return og.apply(this, arguments);
  } catch (err) {
    return allowedIgnores[path] || IGNORES === "true" || (process.env.TAMAGUI_SHOW_FULL_BUNDLE_ERRORS ? console.error(
      `Tamagui failed loading the pre-built tamagui.config.ts
  
  ${err.message}
  ${err.stack}
  
  You can see if it loads in the node repl:
  
  require("./${relative(process.cwd(), path)}").default
  
  `
    ) : hasWarnedForModules.has(path) || (hasWarnedForModules.add(path), console.log(
      `
\u26A0\uFE0F Tamagui Warning [001]: Skipping loading ${path} due to error bundling.
   - message: ${err.message}
   - for more info see: https://tamagui.dev/docs/intro/errors#warning-001
   - set TAMAGUI_SHOW_FULL_BUNDLE_ERRORS=1 to see stack trace

`
    ))), proxyWorm;
  }
}
const allowedIgnores = {
  "expo-constants": !0
};
export {
  getNameToPaths,
  registerRequire
};
//# sourceMappingURL=require.js.map
