import { useCallback, useRef } from "react";
function useRefEffect(effect) {
  const cleanupRef = useRef(void 0);
  return useCallback(
    (instance) => {
      cleanupRef.current && (cleanupRef.current(), cleanupRef.current = void 0), instance != null && (cleanupRef.current = effect(instance));
    },
    [effect]
  );
}
export {
  useRefEffect as default
};
//# sourceMappingURL=useRefEffect.js.map
