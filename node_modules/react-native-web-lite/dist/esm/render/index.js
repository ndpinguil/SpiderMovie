import {
  hydrate as domLegacyHydrate,
  render as domLegacyRender,
  unmountComponentAtNode
} from "react-dom";
import {
  createRoot as domCreateRoot,
  hydrateRoot as domHydrateRoot
} from "react-dom/client";
import { createSheet } from "react-native-web-internals";
function hydrate(element, root) {
  return createSheet(root), domHydrateRoot(root, element);
}
function render(element, root) {
  createSheet(root);
  const reactRoot = domCreateRoot(root);
  return reactRoot.render(element), reactRoot;
}
function hydrateLegacy(element, root, callback) {
  return createSheet(root), domLegacyHydrate(element, root, callback), {
    unmount: function() {
      return unmountComponentAtNode(root);
    }
  };
}
function renderLegacy(element, root, callback) {
  return createSheet(root), domLegacyRender(element, root, callback), {
    unmount: function() {
      return unmountComponentAtNode(root);
    }
  };
}
export {
  renderLegacy as default,
  hydrate,
  hydrateLegacy,
  render
};
//# sourceMappingURL=index.js.map
