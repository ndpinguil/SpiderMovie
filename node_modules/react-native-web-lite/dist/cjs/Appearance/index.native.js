"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var Appearance_exports = {};
__export(Appearance_exports, {
  default: () => Appearance_default
});
module.exports = __toCommonJS(Appearance_exports);
var import_react_native_web_internals = require("react-native-web-internals");
function getQuery() {
  return import_react_native_web_internals.canUseDOM && window.matchMedia != null ? window.matchMedia("(prefers-color-scheme: dark)") : null;
}
const query = getQuery(), listenerMapping = /* @__PURE__ */ new WeakMap(), Appearance = {
  getColorScheme() {
    return query && query.matches ? "dark" : "light";
  },
  addChangeListener(listener) {
    let mappedListener = listenerMapping.get(listener);
    mappedListener || (mappedListener = ({ matches }) => {
      listener({ colorScheme: matches ? "dark" : "light" });
    }, listenerMapping.set(listener, mappedListener)), query && query.addListener(mappedListener);
    function remove() {
      const mappedListener2 = listenerMapping.get(listener);
      query && mappedListener2 && query.removeListener(mappedListener2), listenerMapping.delete(listener);
    }
    return { remove };
  }
};
var Appearance_default = Appearance;
//# sourceMappingURL=index.js.map
