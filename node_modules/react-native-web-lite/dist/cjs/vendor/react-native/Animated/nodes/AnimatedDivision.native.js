"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var AnimatedDivision_exports = {};
__export(AnimatedDivision_exports, {
  default: () => AnimatedDivision_default
});
module.exports = __toCommonJS(AnimatedDivision_exports);
var import_AnimatedInterpolation = __toESM(require("./AnimatedInterpolation")), import_AnimatedNode = __toESM(require("./AnimatedNode")), import_AnimatedValue = __toESM(require("./AnimatedValue")), import_AnimatedWithChildren = __toESM(require("./AnimatedWithChildren"));
class AnimatedDivision extends import_AnimatedWithChildren.default {
  constructor(a, b) {
    super(), this._warnedAboutDivideByZero = !1, (b === 0 || b instanceof import_AnimatedNode.default && b.__getValue() === 0) && console.error("Detected potential division by zero in AnimatedDivision"), this._a = typeof a == "number" ? new import_AnimatedValue.default(a) : a, this._b = typeof b == "number" ? new import_AnimatedValue.default(b) : b;
  }
  __makeNative(platformConfig) {
    this._a.__makeNative(platformConfig), this._b.__makeNative(platformConfig), super.__makeNative(platformConfig);
  }
  __getValue() {
    var a = this._a.__getValue(), b = this._b.__getValue();
    return b === 0 ? (this._warnedAboutDivideByZero || (console.error("Detected division by zero in AnimatedDivision"), this._warnedAboutDivideByZero = !0), 0) : (this._warnedAboutDivideByZero = !1, a / b);
  }
  interpolate(config) {
    return new import_AnimatedInterpolation.default(this, config);
  }
  __attach() {
    this._a.__addChild(this), this._b.__addChild(this);
  }
  __detach() {
    this._a.__removeChild(this), this._b.__removeChild(this), super.__detach();
  }
  __getNativeConfig() {
    return {
      type: "division",
      input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
    };
  }
}
var AnimatedDivision_default = AnimatedDivision;
//# sourceMappingURL=AnimatedDivision.js.map
