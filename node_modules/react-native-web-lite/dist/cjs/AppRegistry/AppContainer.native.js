"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var AppContainer_exports = {};
__export(AppContainer_exports, {
  default: () => AppContainer_default
});
module.exports = __toCommonJS(AppContainer_exports);
var React = __toESM(require("react")), import_react_native_web_internals = require("react-native-web-internals"), import_View = __toESM(require("../View/index")), import_jsx_runtime = require("react/jsx-runtime");
const RootTagContext = React.createContext(null), AppContainer = React.forwardRef((props, forwardedRef) => {
  const { children, WrapperComponent } = props;
  let innerView = /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_View.default, { pointerEvents: "box-none", style: styles.appContainer, children }, 1);
  return WrapperComponent && (innerView = /* @__PURE__ */ (0, import_jsx_runtime.jsx)(WrapperComponent, { children: innerView })), /* @__PURE__ */ (0, import_jsx_runtime.jsx)(RootTagContext.Provider, { value: props.rootTag, children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_View.default, { pointerEvents: "box-none", ref: forwardedRef, style: styles.appContainer, children: innerView }) });
});
AppContainer.displayName = "AppContainer";
var AppContainer_default = AppContainer;
const styles = import_react_native_web_internals.StyleSheet.create({
  appContainer: {
    flex: 1
  }
});
//# sourceMappingURL=AppContainer.js.map
