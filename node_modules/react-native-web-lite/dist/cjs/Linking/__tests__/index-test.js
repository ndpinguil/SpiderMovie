var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
));
var import__ = __toESM(require(".."));
describe("apis/Linking", () => {
  describe("openURL", () => {
    test("calls open with a url and target", (done) => {
      jest.spyOn(window, "open").mockImplementationOnce((url, target, opener) => {
        expect(url).toBe("http://foo.com/"), expect(target).toBe("target_name"), expect(opener).toBe("noopener"), done();
      }), import__.default.openURL("http://foo.com", "target_name");
    }), test("defaults target to _blank if not provided", (done) => {
      jest.spyOn(window, "open").mockImplementationOnce((url, target, opener) => {
        expect(url).toBe("http://foo.com/"), expect(target).toBe("_blank"), expect(opener).toBe("noopener"), done();
      }), import__.default.openURL("http://foo.com");
    }), test("accepts undefined as a target", (done) => {
      jest.spyOn(window, "open").mockImplementationOnce((url, target, opener) => {
        expect(url).toBe("http://foo.com/"), expect(target).toBe(void 0), expect(opener).toBe("noopener"), done();
      }), import__.default.openURL("http://foo.com", void 0);
    });
  });
});
//# sourceMappingURL=index-test.js.map
