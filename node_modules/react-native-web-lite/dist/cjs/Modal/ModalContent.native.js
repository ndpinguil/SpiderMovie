"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var ModalContent_exports = {};
__export(ModalContent_exports, {
  default: () => ModalContent_default
});
module.exports = __toCommonJS(ModalContent_exports);
var React = __toESM(require("react")), import_react_native_web_internals = require("react-native-web-internals"), import_View = __toESM(require("../View")), ModalContent = /* @__PURE__ */ React.forwardRef((props, forwardedRef) => {
  const { active, children, onRequestClose, transparent, ...rest } = props;
  React.useEffect(() => {
    if (import_react_native_web_internals.canUseDOM) {
      var closeOnEscape = (e) => {
        active && e.key === "Escape" && (e.stopPropagation(), onRequestClose && onRequestClose());
      };
      return document.addEventListener("keyup", closeOnEscape, !1), () => document.removeEventListener("keyup", closeOnEscape, !1);
    }
  }, [active, onRequestClose]);
  var style = React.useMemo(() => [styles.modal, transparent ? styles.modalTransparent : styles.modalOpaque], [transparent]);
  return /* @__PURE__ */ React.createElement(
    import_View.default,
    {
      ...rest,
      accessibilityModal: !0,
      accessibilityRole: active ? "dialog" : null,
      ref: forwardedRef,
      style
    },
    /* @__PURE__ */ React.createElement(
      import_View.default,
      {
        style: styles.container
      },
      children
    )
  );
}), styles = import_react_native_web_internals.StyleSheet.create({
  modal: {
    position: "fixed",
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  },
  modalTransparent: {
    backgroundColor: "transparent"
  },
  modalOpaque: {
    backgroundColor: "white"
  },
  container: {
    top: 0,
    flex: 1
  }
}), ModalContent_default = ModalContent;
//# sourceMappingURL=ModalContent.js.map
